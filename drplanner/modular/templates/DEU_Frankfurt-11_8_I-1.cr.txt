def evaluate(self, trajectory: TrajectorySample) -> float:
    cost = 0.0
    cost += 100.0 * self.acceleration_costs(trajectory)
    cost += 0.0 * self.jerk_costs(trajectory)
    cost += 0.0 * self.lateral_jerk_costs(trajectory)
    cost += 0.0 * self.longitudinal_jerk_costs(trajectory)
    cost += 0.0 * self.orientation_offset_costs(trajectory)
    cost += 0.0 * self.steering_angle_costs(trajectory)
    cost += 0.0 * self.steering_velocity_costs(trajectory)
    cost += 1.0 * self.desired_velocity_costs(trajectory)
    cost += 40.0 * self.distance_to_reference_path_costs(trajectory)
    cost += 1.0 * self.desired_path_length_costs(trajectory)
    cost += 30.0 * self.path_length_costs(trajectory)
    return cost