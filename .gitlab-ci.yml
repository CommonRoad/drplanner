image: python:3.10

cache:
  paths:
    - .venv

stages:
  - style
  - test

before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  # Write the SSH private key to a file
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > /tmp/id_rsa
  # Apply correct permissions to the private key file
  - chmod 400 /tmp/id_rsa
  # Add the private key to the SSH agent
  - ssh-add /tmp/id_rsa
  # Ensure .ssh directory exists and has the correct permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Add GitLab server to known hosts to avoid SSH prompts
  - ssh-keyscan gitlab.lrz.de >> ~/.ssh/known_hosts
  # Install the reactive planner using git+ssh and pip in editable mode
  - pip install --upgrade pip
  - pip install poetry
  - pip install coverage
  - poetry config virtualenvs.in-project true
  - poetry install --with test
  - pip install -e git+ssh://git@gitlab.lrz.de/cps/reactive-planner.git@ral_drplanner#egg=commonroad-reactive-planner
  # Add the reactive planner path to PYTHONPATH for tests
  - export PYTHONPATH=$PYTHONPATH:/builds/cps/commonroad/drplanner/planners/reactive-planner

black:
  stage: style
  needs: []
  image: pyfound/black:24.1.1 
  before_script: []
  cache: []
  allow_failure: true
  script:
    - black --check --verbose --diff --color drplanner
    - black --check --verbose --diff --color tests

unittest:
  stage: test
  script:
    - coverage run --source=./drplanner -m unittest discover tests
    - coverage report -m || true
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
