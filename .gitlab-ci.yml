image: python:3.10

stages:
  - static_check
  - test
  - deploy

before_script:
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install --with tests
  - source .venv/bin/activate

.run_test_with_coverage: &run_test_with_coverage
  - coverage run tests/test_basic.py
  - coverage report -m || true

## static_check
pre_commit:
  stage: static_check
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files --show-diff-on-failure

## test
test_py38:
  stage: test
  image: python:3.8
  script:
    - *run_test_with_coverage

test_py39:
  stage: test
  image: python:3.9
  script:
    - *run_test_with_coverage

test_py310:
  stage: test
  image: python:3.10
  script:
    - *run_test_with_coverage

test_py311:
  stage: test
  image: python:3.11
  script:
    - *run_test_with_coverage
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test_py312:
  stage: test
  image: python:3.12
  script:
    - *run_test_with_coverage

## deploy
pages:
  # push the latest documentation of the main branch to the Gitlab pages.
  # available at https://cps.pages.gitlab.lrz.de/commonroad/commonroad-template
  stage: deploy
  only:
    - dev
  before_script:
    - apt-get update && apt-get install -y graphviz python3-sphinx
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install --with docs
    - source .venv/bin/activate
  script:
    - cd docs/source && sphinx-build -b html . ../../public
  artifacts:
    paths:
      - public
  environment:
    name: Gitlab pages
    url: https://cps.pages.gitlab.lrz.de/commonroad/commonroad-template

build_and_push:
  stage: deploy
  when: manual
  only:
    - main
  script:
    - poetry config repositories.test https://test.pypi.org/legacy/  # skip for official pypi
    - poetry build
    - poetry publish --repository test -u __token__ -p ${CR_PYPI_TEST_API_TOKEN}  # use  ${CR_PYPI_RELEASE_API_TOKEN} for official pypi
